{"remainingRequest":"D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\node_modules\\babel-loader\\lib\\index.js!D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\src\\components\\admin\\Goods.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\src\\components\\admin\\Goods.vue","mtime":1593173403294},{"path":"D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2020春\\软件体系架构\\3117004993-邱焕-体系架构\\课程设计\\sportplay\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Goods.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品模块</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区 -->\r\n    <el-card>\r\n      <el-row :gutter=\"25\">\r\n        <el-col :span=\"10\">\r\n          <!-- 搜索添加 -->\r\n          <el-input placeholder=\"请输入搜索内容\" v-model=\"queryInfo.query\" disabled clearable @clear=\"getGoodList\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getGoodList\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n\r\n        <el-col :span=\"8\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加商品</el-button>\r\n          <el-button type=\"success\" @click=\"exportExcel\">导出商品</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 用户列表 -->\r\n      <el-table :data=\"goodlist\" border stripe id=\"goodTable\">\r\n        <el-table-column type=\"index\"></el-table-column>\r\n        <el-table-column label=\"商品名称\" prop=\"goodName\"></el-table-column>\r\n        <el-table-column label=\"分类\" prop=\"goodType\">\r\n\t\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t\t<el-tag disable-transitions>{{scope.row.goodType}}</el-tag>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</el-table-column>\r\n        <el-table-column label=\"价格(￥)\" prop=\"fee\"></el-table-column>\r\n        <el-table-column label=\"图片\" prop=\"img\">\r\n\t\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t\t<el-tag disable-transitions @click=\"look(scope.row.img)\">点击查看</el-tag>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 修改 -->\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row)\"></el-button>\r\n            <!-- 删除 -->\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"deleteGood(scope.row.id)\"></el-button>\r\n            <!-- 上传图片 -->\r\n            <el-button type=\"warning\" icon=\"el-icon-upload\" size=\"mini\" @click=\"upload(scope.row.id)\"></el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pageNum\"\r\n        :page-sizes=\"[1, 2, 5, 100]\"\r\n        :page-size=\"queryInfo.pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      ></el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 创建新用户对话框 -->\r\n    <el-dialog title=\"添加商品\" :visible.sync=\"addDialogVisible\" width=\"50%\"\r\n    @close=\"addDialogClosed\">\r\n      <!-- 内容主体区域 -->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\"\r\n        ref=\"addFormRef\" label-width=\"70px\">\r\n        <!-- 用户名 -->\r\n        <el-form-item label=\"商品名称\" prop=\"goodName\">\r\n          <el-input v-model=\"addForm.goodName\"></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item label=\"分类\" prop=\"goodType\">\r\n          <el-select v-model=\"addForm.goodType\" placeholder=\"请选择商品分类\">\r\n            <el-option :label=\"item.typeName\" :value=\"item.id+''\" v-for=\"item in types\" :key=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 邮箱 -->\r\n        <el-form-item label=\"价格\" prop=\"fee\">\r\n          <el-input v-model=\"addForm.fee\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 内容底部区域 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addGood\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 上传图片 -->\r\n    <el-dialog title=\"添加图片\" :visible.sync=\"uploadShow\" width=\"50%\"\r\n    @close=\"uploadShow = false\">\r\n      <!-- 内容主体区域 -->\r\n      <el-upload\r\n        class=\"upload-demo\"\r\n        drag\r\n        :on-change=\"before\"\r\n        :on-success=\"success\"\r\n        :with-credentials=true\r\n        :action=\"url\">\r\n        <i class=\"el-icon-upload\"></i>\r\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n        <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n      </el-upload>\r\n    </el-dialog>\r\n    <!-- 查看图片 -->\r\n    <el-dialog title=\"查看图片\" :visible.sync=\"picShow\" width=\"50%\"\r\n    @close=\"picShow = false\">\r\n      <!-- 内容主体区域 -->\r\n      <img :src=\"pic\" alt=\"暂无图片\" width=\"500\">\r\n    </el-dialog>\r\n    <!-- 修改用户对话框 -->\r\n    <el-dialog title=\"修改商品\" :visible.sync=\"editDialogVisible\" width=\"50%\" @colse=\"editDialogClosed\">\r\n       <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n        <el-form-item label=\"商品名\" prop=\"goodName\">\r\n          <el-input v-model=\"editForm.goodName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" prop=\"goodType\">\r\n          <el-select v-model=\"editForm.goodType\" placeholder=\"请选择商品分类\">\r\n            <el-option :label=\"item.typeName\" :value=\"item.id+''\" v-for=\"item in types\" :key=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" prop=\"fee\">\r\n          <el-input v-model=\"editForm.fee\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editGoodInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport FileSaver from 'file-saver'\r\nimport XLSX from 'xlsx'\r\nexport default {\r\n  data() {\r\n    return {\r\n      url: '',\r\n      pic: '',\r\n      picShow: false,\r\n      uploadShow: false,\r\n      // 请求数据\r\n      queryInfo: {\r\n        query: \"\",\r\n        pageNum: 1,\r\n        pageSize: 5\r\n      },\r\n      goodlist: [],// 商品列表\r\n\t\t\ttypes: [], //分类表\r\n      total: 0, // 最大数据记录\r\n      addDialogVisible: false ,// 对话框显示\r\n      // 添加用户表单项\r\n      addForm: {\r\n        goodName:'',\r\n        fee:'',\r\n        goodType:'',\r\n      }, \r\n      // 控制修改用户对话框显示/隐藏\r\n      editDialogVisible:false,\r\n      // 修改用户信息\r\n      editForm:{\r\n\t\t\t\tgoodName:'',\r\n        fee:'',\r\n        goodType:'',\r\n\t\t\t},\r\n      // 验证规则\r\n      addFormRules:{\r\n        goodName:[\r\n           { required: true, message: \"请输入商品名\", trigger: \"blur\" },\r\n          { min: 2, max: 8, message: \"长度在 2 到 8 个字符\", trigger: \"blur\" }\r\n        ],\r\n        goodType:[\r\n           { required: true, message: \"请选择分类\", trigger: \"blur\" }\r\n        ],\r\n        fee:[\r\n           { required: true, message: \"请输入价格\", trigger: \"blur\" }\r\n        ],\r\n      },\r\n      // 修改用户表单验证规则\r\n      editFormRules:{\r\n          goodName:[\r\n\t\t\t\t\t\t{ required: true, message: \"请输入商品名\", trigger: \"blur\" },\r\n\t\t\t\t\t\t{ min: 2, max: 8, message: \"长度在 2 到 8 个字符\", trigger: \"blur\" }\r\n\t\t\t\t\t],\r\n\t\t\t\t\tgoodType:[\r\n\t\t\t\t\t\t{ required: true, message: \"请选择分类\", trigger: \"blur\" }\r\n\t\t\t\t\t],\r\n\t\t\t\t\tfee:[\r\n\t\t\t\t\t\t{ required: true, message: \"请输入价格\", trigger: \"blur\" }\r\n\t\t\t\t\t],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getGoodList();\r\n    this.getGoodTypeList();\r\n  },\r\n  methods: {\r\n    look(p){\r\n      let u = `http://localhost:9000/getFile?path=${p}`;\r\n      this.pic = u;\r\n      this.picShow= true;\r\n    },\r\n    async getGoodList() {\r\n      // 调用get请求\r\n      const { data: res } = await this.$http.get(\"good\", {\r\n        params: this.queryInfo\r\n      });\r\n      this.goodlist = res.data; // 将返回数据赋值\r\n      this.total = res.numbers; // 总个数\r\n\t\t},\r\n\t\tasync getGoodTypeList() {\r\n      // 调用get请求\r\n      const { data: res } = await this.$http.get(\"goodType\", {\r\n        params: { \r\n\t\t\t\t\tquery: \"\",\r\n\t\t\t\t\tpageNum: 1,\r\n\t\t\t\t\tpageSize: 1000\r\n\t\t\t\t}\r\n      });\r\n      this.types = res.data; // 将返回数据赋值\r\n    },\r\n    before(file, f){\r\n      console.log(file)\r\n    },\r\n    upload(id){\r\n      this.url = `http://localhost:9000/upload/${id}`;\r\n      this.uploadShow = true;\r\n    },\r\n    success(){\r\n      this.$message.success(\"上传成功!\");\r\n      this.getGoodList();\r\n    },\r\n    // 监听pageSize改变的事件\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pageSize = newSize;\r\n      this.getGoodList(); // 数据发生改变重新申请数据\r\n    },\r\n    // 监听pageNum改变的事件\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pageNum = newPage;\r\n      this.getGoodList(); // 数据发生改变重新申请数据\r\n    },\r\n    // 监听添加用户\r\n    addDialogClosed(){\r\n      this.$refs.addFormRef.resetFields();// 重置表单项\r\n    },\r\n    // 添加商品\r\n    addGood(){\r\n        this.$refs.addFormRef.validate(async valid =>{\r\n        console.log(valid);\r\n        if( !valid ) return;\r\n        // 发起请求\r\n        const {data:res} = await this.$http.post(\"good\",this.addForm);\r\n        if (res != \"success\") {\r\n        \treturn this.$message.error(\"操作失败！！！\");\r\n        }\r\n        this.$message.success(\"操作成功！！！\");\r\n        //隐藏\r\n        this.addDialogVisible = false;\r\n        this.getGoodList();\r\n      })\r\n    },\r\n    // 展示修改框\r\n    async showEditDialog(row){\r\n\t\t\t\tconsole.log(row)\r\n        this.editForm = row;\r\n        this.editDialogVisible = true;\r\n    },\r\n    // 关闭窗口\r\n    editDialogClosed(){\r\n      this.$refs.editFormRef.resetFields();\r\n    },\r\n    // 确认修改\r\n    editGoodInfo(){\r\n      this.$refs.editFormRef.validate(async valid =>{\r\n        console.log(valid);\r\n        if( !valid ) return;\r\n\t\t\t\t// 发起请求\r\n\t\t\t\tconsole.log(this.editForm)\r\n        const {data:res} = await this.$http.put(\"good\", this.editForm);\r\n        console.log(res);\r\n         if (res != \"success\") return this.$message.error(\"操作失败！！！\");\r\n        this.$message.success(\"操作成功！！！\");\r\n        //隐藏\r\n        this.editDialogVisible = false;\r\n        this.getGoodList();\r\n      });\r\n    },\r\n    // 删除按钮\r\n    async deleteGood(id){\r\n      // 弹框\r\n      const confirmResult = await this.$confirm('此操作将永久删除该商品, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).catch(err => err)\r\n      // 成功删除为confirm 取消为 cancel\r\n      if(confirmResult!='confirm'){\r\n        return this.$message.info(\"已取消删除\");\r\n      }\r\n      const {data:res} = await this.$http.delete(\"good/\"+id);\r\n      if (res != \"success\") {\r\n        return this.$message.error(\"操作失败！！！\");\r\n      }\r\n      this.$message.success(\"操作成功！！！\");\r\n      this.getGoodList();\r\n    },\r\n    exportExcel () {\r\n      //指定想要导出表格的id\r\n      var wb = XLSX.utils.table_to_book(document.querySelector('#goodTable'))\r\n      //数据写入\r\n      var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'array' })\r\n      try {\r\n        //表格的参数\r\n        FileSaver.saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'goods.xlsx')\r\n      } catch (e) { \r\n        if(typeof console !== 'undefined') \r\n          console.log(e, wbout) \r\n      }\r\n      return wbout;\r\n     },\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.el-card{\r\n    margin-top: 10px;\r\n}\r\n.el-table{\r\n    margin-top: 10px;\r\n}\r\n</style>"],"sourceRoot":"src/components/admin"}]}